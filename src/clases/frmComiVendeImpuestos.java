/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clases;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.VerticalPositionMark;
import java.awt.Desktop;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import static java.lang.Math.random;
import static java.lang.StrictMath.random;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

/**
 *
 * @author Agustin
 */
public class frmComiVendeImpuestos extends javax.swing.JFrame {

    /**
     * Creates new form frmComiVendeImpuestos
     */
    public String usr,suc,bd,passbd,inst,ipserv,userbd;
    public String[] instFis=new String[3];
    public String[] sucT=new String[3];
    public String[] servInt=new String[3];
    public double sumComiAnt=0,sumComiNue=0,sumDifComi=0,sumDifComiTot=0;  
    DefaultListModel dlm=new DefaultListModel();
    public String rutaArchivo;
    
    public frmComiVendeImpuestos(String[] args) {
        initComponents();
        bd=args[0];
        passbd=args[1];
        usr=args[2];
        suc=args[3];
        inst=args[4];
        ipserv=args[5];
        userbd=args[6];
        instFis[0]="vfasis";
        instFis[1]="ealsis";
        instFis[2]="llosis";
        sucT[0]="VFA";
        sucT[1]="EAL";
        sucT[2]="LLO";
        servInt[0]="172.16.8.201";
        servInt[1]="172.16.8.203";
        servInt[2]="172.16.8.202";
        //lstDatos.setModel(dlm);
        txtCodSupervisor.setVisible(false);
        txtCodVenEmizor.setVisible(false);
        if("TEDESQUI".matches(usr) || "LORONO".matches(usr) || "PINELL".matches(usr) || "FARROVA".matches(usr) || "RIVERO".matches(usr)){
            btnReporte.setVisible(true);
        }else{
            btnReporte.setVisible(false);
        }
    }

    
    private frmComiVendeImpuestos() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jdcDesde = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jdcHasta = new com.toedter.calendar.JDateChooser();
        btnReporte = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtCodVen = new javax.swing.JTextField();
        txtNomVendedor = new javax.swing.JTextField();
        btnRepPorVendedor = new javax.swing.JButton();
        txtCodVenEmizor = new javax.swing.JTextField();
        txtCodSupervisor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SISCAS 2.0 - Reporte Comisiones Vendedores");

        jLabel1.setText("Fecha Desde:");

        jdcDesde.setDateFormatString("dd/MM/yyyy");

        jLabel2.setText("Fecha Hasta:");

        jdcHasta.setDateFormatString("dd/MM/yyyy");

        btnReporte.setText("GENERAR REPORTE (TODOS LOS VENDEDORES)");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        jLabel4.setText("CÃ³digo SISCAS Vendedor:");

        txtCodVen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodVenFocusLost(evt);
            }
        });

        txtNomVendedor.setEditable(false);

        btnRepPorVendedor.setText("GENERAR REPORTE POR VENDEDOR");
        btnRepPorVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRepPorVendedorActionPerformed(evt);
            }
        });

        txtCodVenEmizor.setEditable(false);

        txtCodSupervisor.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnReporte)
                .addGap(178, 178, 178))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jdcDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdcHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCodVen, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnRepPorVendedor))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNomVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodVenEmizor, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodSupervisor, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jdcDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnReporte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodVen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNomVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodVenEmizor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodSupervisor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRepPorVendedor)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed

        if((this.jdcDesde.getDate()==null) || (this.jdcHasta.getDate()==null)){
            A.mensaje("Debe seleccionar ambas fechas antes de ejecutar el reporte");
            return;
        }

        if(jdcDesde.getDate().after(jdcHasta.getDate())){
            A.mensaje("La fecha desde debe ser Mayor o Igual a fecha hasta");
            return;
        }

        JFileChooser jfc=new JFileChooser();
           int opc=jfc.showSaveDialog(this);
           
           if(opc==JFileChooser.APPROVE_OPTION){
               File f=jfc.getSelectedFile();
               //String nomarch=f.toString();
               //txtRuta.setText(nomarch);
               
               rutaArchivo=f+".csv";
           }
        
        SimpleDateFormat sdf=new SimpleDateFormat("MM/dd/yyyy");
        
        //conecta a LPCASCADA segun la sucursal
     

        if(A.confirma("Va a generar el archivo plano, PUEDE TARDAR VARIOS MINUTOS, desea continuar?")==0){

        try {
                File outFile = new File(rutaArchivo);
                BufferedWriter imprimir = new BufferedWriter(new FileWriter(outFile));
                imprimir.write("Cod.Vendedor;Nombre Vendedor;Linea;Sublinea;TamaÃ±o;Tipo Envase;Unidad;Comi.Ant.Int;Comi.Nue.Int;Dif.Nue-Ant;Comi.Nue.Fis;Pago.Imp 16%;Dif al 16%;Pago.Imp 13%;Dif al 13%");
                imprimir.newLine();
                for(int i=0;i<3;i++){  
            
            //conecta a la base de datos interna 
            ConexionBD.conectar(servInt[i], inst, bd, userbd, passbd);
            //conecta a la base de datos LPCASCADA
            ConexionBD.conectar2("172.16.8.205", instFis[i], bd, userbd, passbd);
            double difInterna=0;
            String porcentaje;
            ResultSet rs,rs2;
            //Proceso
            /*String queryInt="SELECT X.CODVEN AS CODVEN,X.NOMBRE AS NOMBRE,X.SUBLINEA AS SUBLINEA,SUM(X.COMANTBS) AS COMANTBS,SUM(X.COMNUEBS) AS COMNUEBS,SUM(X.COMNUEBS-X.COMANTBS) AS DIF " +
                    "FROM (SELECT A.DIA_CODVEN AS CODVEN,F.VEN_NOMBRE AS NOMBRE,D.PRE_CIUPARANT AS COMANT,E.PRE_CIUPAR AS COMNUE,A.DIA_CODSUC AS SUC,G.PRE_CODSUB AS SUBLINEA,SUM(B.SAB_VENCAJ/G.PRE_UNIDAD) AS VENPAQ,(SUM(B.SAB_VENCAJ/G.PRE_UNIDAD)*D.PRE_CIUPARANT) AS COMANTBS,(SUM(B.SAB_VENCAJ/G.PRE_UNIDAD)*E.PRE_CIUPAR) AS COMNUEBS " +
                    "FROM VECABBOLETA A,VEDETBOLETA B,VECAJA C,PRPRECIOS_ANT D,PRPRECIOS E,VEVENDEDOR F,PRPRODUCTO G " +
                    "WHERE A.DIA_BOLETA=B.SAB_BOLETA " +
                    "AND A.DIA_CODCAJ=C.CAJ_BOLETA " +
                    "AND B.SAB_CODPRO=D.PRE_CODPROANT " +
                    "AND D.PRE_CODPROANT=E.PRE_CODPRO " +
                    "AND A.DIA_CODVEN=F.VEN_CODIGO " +
                    "AND E.PRE_CODPRO=G.PRE_CODIGO " +
                    "AND A.DIA_ACCION='V' " +
                    "AND C.CAJ_FECLIQ BETWEEN '"+sdf.format(jdcDesde.getDate())+"' AND '"+sdf.format(jdcHasta.getDate())+"' " +
                    "AND B.SAB_VENCAJ>0 " +
                    "AND E.PRE_CODPRETIP=2 " +
                    "GROUP BY A.DIA_CODVEN,F.VEN_NOMBRE,D.PRE_CIUPARANT,E.PRE_CIUPAR,A.DIA_CODSUC,G.PRE_CODSUB " +
                    "ORDER BY A.DIA_CODVEN,G.PRE_CODSUB) AS X " +
                    "GROUP BY X.CODVEN,X.NOMBRE,X.SUBLINEA " +
                    "ORDER BY X.CODVEN,X.SUBLINEA";*/

            String queryInt="SELECT Y.CODVEN AS CODVEN,Y.NOMBRE AS NOMBRE,Y.LINEA AS LINEA,Y.SUBLINEA AS SUBLINEA,Y.TAM AS TAM,Y.TIPENV AS TIPENV,Y.UNID AS UNID,Y.COMIANT AS COMIANT,Y.COMINUE AS COMINUE,SUM(Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0)) AS PAQNETO,SUM(((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMIANT)) AS COMIANTBS,SUM(((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMINUE)) AS COMINUEBS,SUM((((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMINUE)-((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMIANT))) AS DIF " +
            "FROM (SELECT A.DIA_BOLLIQ AS BOLLIQ,A.DIA_CODVEN AS CODVEN,H.VEN_NOMBRE AS NOMBRE,D.PRE_CODLIN AS LINEA,D.PRE_CODSUB AS SUBLINEA,D.PRE_CODTAM AS TAM,D.PRE_TIPENV AS TIPENV,D.PRE_UNIDAD AS UNID,P.COMIANT AS COMIANT,P.COMINUE AS COMINUE, SUM(B.SAB_VENCAJ/D.PRE_UNIDAD) AS PAQ " +
            "FROM VECABBOLETA A,VEDETBOLETA B,VECAJA C,PRPRODUCTO D,PRPRECIOS E,VEVENDEDOR H,COMIPRODAGRUPADO P " +
            "WHERE A.DIA_BOLETA=B.SAB_BOLETA " +
            "AND A.DIA_CODCAJ=C.CAJ_BOLETA " +
            "AND B.SAB_CODPRO=D.PRE_CODIGO " +
            "AND D.PRE_CODIGO=E.PRE_CODPRO " +
            "AND A.DIA_CODVEN=H.VEN_CODIGO " +
            "AND D.PRE_CODLIN=P.LINEA " +
            "AND D.PRE_CODSUB=P.SUBLINEA " +
            "AND D.PRE_CODTAM=P.TAM " +
            "AND D.PRE_TIPENV=P.TIPENV " +
            "AND D.PRE_UNIDAD=P.UNIDAD " +
            "AND C.CAJ_FECLIQ BETWEEN '"+sdf.format(jdcDesde.getDate())+"' AND '"+sdf.format(jdcHasta.getDate())+"' " +
            "AND E.PRE_CODPRETIP=2 " +
            "AND A.DIA_ACCION='V' " +
            "AND C.CAJ_ACCION='V' " +
            "AND D.PRE_TIPENV<>'R' " +
            "GROUP BY A.DIA_BOLLIQ,A.DIA_CODVEN,H.VEN_NOMBRE,D.PRE_CODLIN,D.PRE_CODSUB,D.PRE_CODTAM,D.PRE_TIPENV,D.PRE_UNIDAD,P.COMIANT,P.COMINUE) AS Y LEFT OUTER JOIN VEBONIFICACION AS F " +
            "ON Y.BOLLIQ=F.BON_BOLLIQ " +
            "AND Y.LINEA=F.BON_CODLIN " +
            "AND Y.SUBLINEA=F.BON_CODSUB " +
            "AND Y.TAM=F.BON_CODTAM " +
            "AND Y.TIPENV=F.BON_TIPENV " +
            "AND Y.UNID=F.BON_UNIDAD " +
            "GROUP BY Y.CODVEN,Y.NOMBRE,Y.LINEA,Y.SUBLINEA,Y.TAM,Y.TIPENV,Y.UNID,Y.COMIANT,Y.COMINUE";
            rs=ConexionBD.querySelect(queryInt);
              try {
                  while(rs.next()){
                     double impFis16=0,dif16=0,impFis13=0,dif13=0,comFis=0; 
                      difInterna=Double.parseDouble(rs.getString("DIF"));
                            //realiza la consulta a FIS
                           /* String queryFIS="SELECT X.CODVEN AS CODVEN,X.NOMBRE AS NOMBRE,X.SUBLINEA AS SUBLINEA,SUM(X.COMANTBS) AS COMANTBSFIS,SUM(X.COMNUEBS) AS COMNUEBSFIS,SUM(X.COMNUEBS-X.COMANTBS) AS DIFFIS,(SUM(X.COMNUEBS)*0.16) AS IMP16FIS " +
                    "FROM (SELECT A.DIA_CODVEN AS CODVEN,F.VEN_NOMBRE AS NOMBRE,D.PRE_CIUPARANT AS COMANT,E.PRE_CIUPAR AS COMNUE,A.DIA_CODSUC AS SUC,G.PRE_CODSUB AS SUBLINEA,SUM(B.SAB_VENCAJ/G.PRE_UNIDAD) AS VENPAQ,(SUM(B.SAB_VENCAJ/G.PRE_UNIDAD)*D.PRE_CIUPARANT) AS COMANTBS,(SUM(B.SAB_VENCAJ/G.PRE_UNIDAD)*E.PRE_CIUPAR) AS COMNUEBS " +
                    "FROM VECABBOLETA A,VEDETBOLETA B,VECAJA C,PRPRECIOS_ANT D,PRPRECIOS E,VEVENDEDOR F,PRPRODUCTO G " +
                    "WHERE A.DIA_BOLETA=B.SAB_BOLETA " +
                    "AND A.DIA_CODCAJ=C.CAJ_BOLETA " +
                    "AND B.SAB_CODPRO=D.PRE_CODPROANT " +
                    "AND D.PRE_CODPROANT=E.PRE_CODPRO " +
                    "AND A.DIA_CODVEN=F.VEN_CODIGO " +
                    "AND E.PRE_CODPRO=G.PRE_CODIGO " +
                    "AND G.PRE_CODSUB='"+rs.getString("SUBLINEA")+"' " +
                    "AND A.DIA_CODVEN='"+rs.getString("CODVEN")+"' " +
                    "AND A.DIA_ACCION='V' " +
                    "AND C.CAJ_FECLIQ BETWEEN '"+sdf.format(jdcDesde.getDate())+"' AND '"+sdf.format(jdcHasta.getDate())+"' " +
                    "AND B.SAB_VENCAJ>0 " +
                    "AND E.PRE_CODPRETIP=2 " +
                    "GROUP BY A.DIA_CODVEN,F.VEN_NOMBRE,D.PRE_CIUPARANT,E.PRE_CIUPAR,A.DIA_CODSUC,G.PRE_CODSUB " +
                    "ORDER BY A.DIA_CODVEN,G.PRE_CODSUB) AS X " +
                    "GROUP BY X.CODVEN,X.NOMBRE,X.SUBLINEA " +
                    "ORDER BY X.CODVEN,X.SUBLINEA";*/
                            
                      
                 /*     String queryFIS="SELECT Y.BOLLIQ AS BOLLIQ,Y.CODVEN AS CODVEN,Y.NOMBRE AS NOMBRE,Y.LINEA AS LINEA,Y.SUBLINEA AS SUBLINEA,Y.TAM AS TAM,Y.TIPENV AS TIPENV,Y.UNID AS UNID,Y.COMIANT AS COMIANT,Y.COMINUE AS COMINUE,Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0) AS PAQNETO,((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMIANT) AS COMIANTBS,((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMINUE) AS COMINUEBSFIS " +
            "FROM (SELECT A.DIA_BOLLIQ AS BOLLIQ,A.DIA_CODVEN AS CODVEN,H.VEN_NOMBRE AS NOMBRE,D.PRE_CODLIN AS LINEA,D.PRE_CODSUB AS SUBLINEA,D.PRE_CODTAM AS TAM,D.PRE_TIPENV AS TIPENV,D.PRE_UNIDAD AS UNID,P.COMIANT AS COMIANT,P.COMINUE AS COMINUE, SUM(B.SAB_VENCAJ/D.PRE_UNIDAD) AS PAQ " +
            "FROM VECABBOLETA A,VEDETBOLETA B,VECAJA C,PRPRODUCTO D,PRPRECIOS E,VEVENDEDOR H,COMIPRODAGRUPADO P " +
            "WHERE A.DIA_BOLETA=B.SAB_BOLETA " +
            "AND A.DIA_CODCAJ=C.CAJ_BOLETA " +
            "AND B.SAB_CODPRO=D.PRE_CODIGO " +
            "AND D.PRE_CODIGO=E.PRE_CODPRO " +
            "AND A.DIA_CODVEN=H.VEN_CODIGO " +
            "AND D.PRE_CODLIN=P.LINEA " +
            "AND D.PRE_CODSUB=P.SUBLINEA " +
            "AND D.PRE_CODTAM=P.TAM " +
            "AND D.PRE_TIPENV=P.TIPENV " +
            "AND D.PRE_UNIDAD=P.UNIDAD " +
            "AND C.CAJ_FECLIQ BETWEEN '"+sdf.format(jdcDesde.getDate())+"' AND '"+sdf.format(jdcHasta.getDate())+"' " +
            "AND D.PRE_CODLIN='"+rs.getString("LINEA")+"' " +
            "AND D.PRE_CODSUB='"+rs.getString("SUBLINEA")+"' " +
            "AND D.PRE_CODTAM='"+rs.getString("TAM")+"' " +
            "AND D.PRE_TIPENV='"+rs.getString("TIPENV")+"' " +
            "AND D.PRE_UNIDAD='"+rs.getString("UNID")+"' " +
            "AND A.DIA_CODVEN='"+rs.getString("CODVEN")+"' " +
            "AND E.PRE_CODPRETIP=2 " +
            "AND A.DIA_ACCION='V' " +
            "AND C.CAJ_ACCION='V' " +
            "GROUP BY A.DIA_BOLLIQ,A.DIA_CODVEN,H.VEN_NOMBRE,D.PRE_CODLIN,D.PRE_CODSUB,D.PRE_CODTAM,D.PRE_TIPENV,D.PRE_UNIDAD,D.PRE_ICE,P.COMIANT,P.COMINUE) AS Y LEFT OUTER JOIN VEBONIFICACION AS F " +
            "ON Y.BOLLIQ=F.BON_BOLLIQ " +
            "AND Y.LINEA=F.BON_CODLIN " +
            "AND Y.SUBLINEA=F.BON_CODSUB " +
            "AND Y.TAM=F.BON_CODTAM " +
            "AND Y.TIPENV=F.BON_TIPENV " +
            "AND Y.UNID=F.BON_UNIDAD";*/
                      
                      String queryFIS="SELECT Y.CODVEN AS CODVEN,Y.NOMBRE AS NOMBRE,Y.LINEA AS LINEA,Y.SUBLINEA AS SUBLINEA,Y.TAM AS TAM,Y.TIPENV AS TIPENV,Y.UNID AS UNID,Y.COMIANT AS COMIANT,Y.COMINUE AS COMINUE,Y.PAQ-COALESCE((F.PAQBONFIS/F.UNID),0) AS PAQNETO,((Y.PAQ-COALESCE((F.PAQBONFIS/F.UNID),0))*Y.COMIANT) AS COMIANTBS,((Y.PAQ-COALESCE((F.PAQBONFIS/F.UNID),0))*Y.COMINUE) AS COMINUEBSFIS " +
"FROM (SELECT A.DIA_BOLLIQ AS BOLLIQ,A.DIA_CODVEN AS CODVEN,H.VEN_NOMBRE AS NOMBRE,D.PRE_CODLIN AS LINEA,D.PRE_CODSUB AS SUBLINEA,D.PRE_CODTAM AS TAM,D.PRE_TIPENV AS TIPENV,D.PRE_UNIDAD AS UNID,P.COMIANT AS COMIANT,P.COMINUE AS COMINUE, SUM(B.SAB_VENCAJ/D.PRE_UNIDAD) AS PAQ " +
"FROM VECABBOLETA A,VEDETBOLETA B,VECAJA C,PRPRODUCTO D,PRPRECIOS E,VEVENDEDOR H,COMIPRODAGRUPADO P " +
"WHERE A.DIA_BOLETA=B.SAB_BOLETA " +
"AND A.DIA_CODCAJ=C.CAJ_BOLETA " +
"AND B.SAB_CODPRO=D.PRE_CODIGO " +
"AND D.PRE_CODIGO=E.PRE_CODPRO " +
"AND A.DIA_CODVEN=H.VEN_CODIGO " +
"AND D.PRE_CODLIN=P.LINEA " +
"AND D.PRE_CODSUB=P.SUBLINEA " +
"AND D.PRE_CODTAM=P.TAM " +
"AND D.PRE_TIPENV=P.TIPENV " +
"AND D.PRE_UNIDAD=P.UNIDAD " +
"AND D.PRE_TIPENV<>'R' " +
"AND C.CAJ_FECLIQ BETWEEN '"+sdf.format(jdcDesde.getDate())+"' AND '"+sdf.format(jdcHasta.getDate())+"' " +
"AND D.PRE_CODLIN='"+rs.getString("LINEA")+"' " +
"AND D.PRE_CODSUB='"+rs.getString("SUBLINEA")+"' " +
"AND D.PRE_CODTAM='"+rs.getString("TAM")+"' " +
"AND D.PRE_TIPENV='"+rs.getString("TIPENV")+"' " +
"AND D.PRE_UNIDAD='"+rs.getString("UNID")+"' " +
"AND A.DIA_CODVEN='"+rs.getString("CODVEN")+"' " +
"AND E.PRE_CODPRETIP=2 " +
"AND A.DIA_ACCION='V' " +
"AND C.CAJ_ACCION='V' " +
"GROUP BY A.DIA_BOLLIQ,A.DIA_CODVEN,H.VEN_NOMBRE,D.PRE_CODLIN,D.PRE_CODSUB,D.PRE_CODTAM,D.PRE_TIPENV,D.PRE_UNIDAD,D.PRE_ICE,P.COMIANT,P.COMINUE) AS Y LEFT OUTER JOIN (SELECT W.BON_BOLLIQ AS BOLLIQ, Q.PRE_CODLIN AS LINEA,Q.PRE_CODSUB AS SUBLINEA,Q.PRE_CODTAM AS TAM,Q.PRE_TIPENV AS TIPENV,Q.PRE_UNIDAD AS UNID, SUM(W.BON_CAJAS) AS PAQBONFIS " +
"FROM VEBONIFICACION W,PRPRODUCTO Q " +
"WHERE W.BON_CODPRO=Q.PRE_CODIGO " +
"GROUP BY W.BON_BOLLIQ,Q.PRE_CODLIN,Q.PRE_CODSUB,Q.PRE_CODTAM,Q.PRE_TIPENV,Q.PRE_UNIDAD) AS F " +
"ON Y.BOLLIQ=F.BOLLIQ " +
"AND Y.LINEA=F.LINEA " +
"AND Y.SUBLINEA=F.SUBLINEA " +
"AND Y.TAM=F.TAM " +
"AND Y.TIPENV=F.TIPENV " +
"AND Y.UNID=F.UNID";
                      
                             rs2=ConexionBD.querySelect2(queryFIS);
                             if(rs2.next()){
                                 comFis=Double.parseDouble(rs2.getString("COMINUEBSFIS"));
                                 impFis16=(comFis*0.16);
                                 dif16=difInterna-impFis16;
                                 impFis13=(comFis*0.13);
                                 dif13=difInterna-impFis13;
                                 imprimir.write(rs.getString("CODVEN")+";"+rs.getString("NOMBRE")+";"+rs.getString("LINEA")+";"+rs.getString("SUBLINEA")+";"+rs.getString("TAM")+";"+rs.getString("TIPENV")+";"+rs.getString("UNID")+";"+rs.getString("COMIANTBS")+";"+rs.getString("COMINUEBS")+";"+difInterna+";"+comFis+";"+impFis16+";"+dif16+";"+impFis13+";"+dif13);
                                 imprimir.newLine();
                                 //dlm.addElement(rs.getString("CODVEN")+";"+rs.getString("NOMBRE")+";"+rs.getString("SUBLINEA")+";"+rs.getString("COMANTBS")+";"+rs.getString("COMNUEBS")+";"+rs.getString("DIF")+";"+rs2.getString("COMANTBSFIS")+";"+rs2.getString("COMNUEBSFIS")+";"+rs2.getString("DIFFIS"));
                             }else{
                                 dif16=0;
                                 dif13=0;
                                 imprimir.write(rs.getString("CODVEN")+";"+rs.getString("NOMBRE")+";"+rs.getString("LINEA")+";"+rs.getString("SUBLINEA")+";"+rs.getString("TAM")+";"+rs.getString("TIPENV")+";"+rs.getString("UNID")+";"+rs.getString("COMIANTBS")+";"+rs.getString("COMINUEBS")+";"+difInterna+";0;0;0;0;0");
                                 imprimir.newLine();
                                  //dlm.addElement(rs.getString("CODVEN")+";"+rs.getString("NOMBRE")+";"+rs.getString("SUBLINEA")+";"+rs.getString("COMANTBS")+";"+rs.getString("COMNUEBS")+";"+rs.getString("DIF")+";0;0;0");
                             }
                             rs2.close();
                      
                  } 
                  rs.close();
                  ConexionBD.cierraConexion2();
              } catch (SQLException ex) {
                  A.mensaje("OcurriÃ³ un problema a al intentar obtener registros de INT, ERROR: "+ex.getMessage());
              }

            ConexionBD.cierraConexion();

            }//fin for

          
                imprimir.close();  
                } catch (IOException e) {
                System.err.println(e);
                System.exit(1);
                }
          A.mensaje("Fue creado el archivo plano");
          System.exit(1);
          
        }//fin if confirma
    }//GEN-LAST:event_btnReporteActionPerformed

    private void txtCodVenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodVenFocusLost
        // TODO add your handling code here:
       /* String query="SELECT a.first_name nom,a.last_name ape,b.address1 dir,b.state lug from users a,branches b,user_branch c \n" +
        " where a.id=c.user_id and b.id=c.branch_id and a.id='"+txtCodVen.getText()+"'";*/
        
        
        if("".matches(txtCodVen.getText())){
            return;
        }
        //conecta a la base de datos interna 
        
            ConexionBD.conectar(ipserv, inst, bd, userbd, passbd);
        String query="SELECT A.VEN_NOMBRE,A.VEN_CODIGO,B.N_CODWEB,C.M_CODSUP " +
                "FROM VEVENDEDOR A,HOMOLOGAVENDEDOR B,VEMOVSUPERVISOR C " +
                "WHERE A.VEN_CODIGO=B.N_CODSISCAS " +
                "AND A.VEN_CODIGO=C.M_CODVEN AND A.VEN_CODIGO='"+txtCodVen.getText()+"'";
        ResultSet rs;

        rs=ConexionBD.querySelect(query);
        try {
            if (rs.next()){
                txtNomVendedor.setText(rs.getString("VEN_NOMBRE"));
                txtCodVenEmizor.setText(rs.getString("N_CODWEB"));
                txtCodSupervisor.setText(rs.getString("M_CODSUP"));
                /*lblUbica.setText(rs.getString("dir"));
                lblLugar.setText(rs.getString("lug"));*/
            }else{
                A.mensaje("No se encontrÃ³ ningÃºn vendedor con el cÃ³digo ingresado");
                txtCodVen.setText("");
                txtNomVendedor.setText("");
                /*lblUbica.setText("");
                lblLugar.setText("");*/
            }
            rs.close();
        } catch (SQLException ex) {
            A.mensaje("Ocurrio un error al intentar obtener al vendedor ERROR: "+ex.getMessage());
        }
        ConexionBD.cierraConexion();
    }//GEN-LAST:event_txtCodVenFocusLost

    private void btnRepPorVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRepPorVendedorActionPerformed
        // TODO add your handling code here:
          if((this.jdcDesde.getDate()==null) || (this.jdcHasta.getDate()==null)){
            A.mensaje("Debe seleccionar ambas fechas antes de ejecutar el reporte");
            return;
        }

        if(jdcDesde.getDate().after(jdcHasta.getDate())){
            A.mensaje("La fecha desde debe ser Mayor o Igual a fecha hasta");
            return;
        }
        
        if("".matches(txtCodVen.getText())){
            A.mensaje("Debe ingresar un cÃ³digo de vendedor vÃ¡lido");
            return;
        }
        
        if("".matches(txtCodVenEmizor.getText()) || "0".matches(txtCodVenEmizor.getText())){
            A.mensaje("El vendedor debe estar dado de Alta en la plataforma EMIZOR");
            return;
        }
        
        if("".matches(txtCodSupervisor.getText()) || "0".matches(txtCodSupervisor.getText())){
            A.mensaje("El vendedor debe tener asignado un supervisor");
            return;
        }
        
       /* JFileChooser jfc=new JFileChooser();
           int opc=jfc.showSaveDialog(this);
           
           if(opc==JFileChooser.APPROVE_OPTION){
               File f=jfc.getSelectedFile();
               //String nomarch=f.toString();
               //txtRuta.setText(nomarch);
               
               rutaArchivo=f+".csv";
           }*/
        
        SimpleDateFormat sdf=new SimpleDateFormat("MM/dd/yyyy");
        
        //conecta a LPCASCADA segun la sucursal
     

        if(A.confirma("Va a generar el reporte, desea continuar?")==0){

        try {
                /*File outFile = new File(rutaArchivo);
                BufferedWriter imprimir = new BufferedWriter(new FileWriter(outFile));
                imprimir.write("Cod.Vendedor;Nombre Vendedor;Linea;Sublinea;TamaÃ±o;Tipo Envase;Unidad;Comi.Ant.Int;Comi.Nue.Int;Dif.Nue-Ant;Comi.Nue.Fis;Pago.Imp 16%;Dif al 16%;Pago.Imp 13%;Dif al 13%");
                imprimir.newLine();*/
               
            
            //conecta a la base de datos interna 
            ConexionBD.conectar(ipserv, inst, bd, userbd, passbd);
            //conecta a la base de datos LPCASCADA
           
            if("VFA".matches(suc)){
              ConexionBD.conectar2("172.16.8.205", instFis[0], bd, userbd, passbd);  
            }
            if("EAL".matches(suc)){
              ConexionBD.conectar2("172.16.8.205", instFis[1], bd, userbd, passbd);  
            }
            if("LLO".matches(suc)){
              ConexionBD.conectar2("172.16.8.205", instFis[2], bd, userbd, passbd);  
            }
            
            double difInterna=0;
            String porcentaje;
            ResultSet rs,rs2;
            //Proceso
      

            /*String queryInt="SELECT Y.FECHA AS FECHA,Y.CODVEN AS CODVEN,Y.NOMBRE AS NOMBRE,Y.LINEA AS LINEA,Y.SUBLINEA AS SUBLINEA,Y.TAM AS TAM,Y.TIPENV AS TIPENV,Y.UNID AS UNID,Y.COMIANT AS COMIANT,Y.COMINUE AS COMINUE,SUM(Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0)) AS PAQNETO,SUM(((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMIANT)) AS COMIANTBS,SUM(((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMINUE)) AS COMINUEBS,SUM((((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMINUE)-((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMIANT))) AS DIF " +
            "FROM (SELECT A.DIA_BOLLIQ AS BOLLIQ,A.DIA_CODVEN AS CODVEN,H.VEN_NOMBRE AS NOMBRE,D.PRE_CODLIN AS LINEA,D.PRE_CODSUB AS SUBLINEA,D.PRE_CODTAM AS TAM,D.PRE_TIPENV AS TIPENV,D.PRE_UNIDAD AS UNID,P.COMIANT AS COMIANT,P.COMINUE AS COMINUE,C.CAJ_FECLIQ AS FECHA, SUM(B.SAB_VENCAJ/D.PRE_UNIDAD) AS PAQ " +
            "FROM VECABBOLETA A,VEDETBOLETA B,VECAJA C,PRPRODUCTO D,PRPRECIOS E,VEVENDEDOR H,COMIPRODAGRUPADO P " +
            "WHERE A.DIA_BOLETA=B.SAB_BOLETA " +
            "AND A.DIA_CODCAJ=C.CAJ_BOLETA " +
            "AND B.SAB_CODPRO=D.PRE_CODIGO " +
            "AND D.PRE_CODIGO=E.PRE_CODPRO " +
            "AND A.DIA_CODVEN=H.VEN_CODIGO " +
            "AND D.PRE_CODLIN=P.LINEA " +
            "AND D.PRE_CODSUB=P.SUBLINEA " +
            "AND D.PRE_CODTAM=P.TAM " +
            "AND D.PRE_TIPENV=P.TIPENV " +
            "AND D.PRE_UNIDAD=P.UNIDAD " +
            "AND C.CAJ_FECLIQ BETWEEN '"+sdf.format(jdcDesde.getDate())+"' AND '"+sdf.format(jdcHasta.getDate())+"' " +
            "AND H.VEN_CODIGO='"+txtCodVen.getText()+"'" +
            "AND E.PRE_CODPRETIP=2 " +
            "AND A.DIA_ACCION='V' " +
            "AND C.CAJ_ACCION='V' " +
            "AND D.PRE_TIPENV<>'R'  " +      
            "GROUP BY A.DIA_BOLLIQ,A.DIA_CODVEN,H.VEN_NOMBRE,D.PRE_CODLIN,D.PRE_CODSUB,D.PRE_CODTAM,D.PRE_TIPENV,D.PRE_UNIDAD,P.COMIANT,P.COMINUE,C.CAJ_FECLIQ) AS Y LEFT OUTER JOIN VEBONIFICACION AS F " +
            "ON Y.BOLLIQ=F.BON_BOLLIQ " +
            "AND Y.LINEA=F.BON_CODLIN " +
            "AND Y.SUBLINEA=F.BON_CODSUB " +
            "AND Y.TAM=F.BON_CODTAM AND Y.TIPENV=F.BON_TIPENV " +
            "AND Y.UNID=F.BON_UNIDAD " +
            "GROUP BY Y.FECHA,Y.CODVEN,Y.NOMBRE,Y.LINEA,Y.SUBLINEA,Y.TAM,Y.TIPENV,Y.UNID,Y.COMIANT,Y.COMINUE " +
            "ORDER BY Y.FECHA" ;*/
            
            String queryInt="SELECT W.FECHA,SUM(W.COMIANTBS) AS COMIANTBS,SUM(W.COMINUEBS) AS COMINUEBS " +
            "FROM(SELECT Y.FECHA AS FECHA,Y.CODVEN AS CODVEN,Y.NOMBRE AS NOMBRE,Y.LINEA AS LINEA,Y.SUBLINEA AS SUBLINEA,Y.TAM AS TAM," +
            "Y.TIPENV AS TIPENV,Y.UNID AS UNID,Y.COMIANT AS COMIANT,Y.COMINUE AS COMINUE,SUM(Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0)) AS PAQNETO," +
            "SUM(((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMIANT)) AS COMIANTBS,SUM(((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMINUE)) AS COMINUEBS,SUM((((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMINUE)-((Y.PAQ-COALESCE((F.BON_CAJAS/F.BON_UNIDAD),0))*Y.COMIANT))) AS DIF " +
            "FROM (SELECT A.DIA_BOLLIQ AS BOLLIQ,A.DIA_CODVEN AS CODVEN,H.VEN_NOMBRE AS NOMBRE,D.PRE_CODLIN AS LINEA,D.PRE_CODSUB AS SUBLINEA,D.PRE_CODTAM AS TAM,D.PRE_TIPENV AS TIPENV,D.PRE_UNIDAD AS UNID,P.COMIANT AS COMIANT,P.COMINUE AS COMINUE,C.CAJ_FECLIQ AS FECHA, SUM(B.SAB_VENCAJ/D.PRE_UNIDAD) AS PAQ " +
            "FROM VECABBOLETA A,VEDETBOLETA B,VECAJA C,PRPRODUCTO D,PRPRECIOS E,VEVENDEDOR H,COMIPRODAGRUPADO P " +
            "WHERE A.DIA_BOLETA=B.SAB_BOLETA " +
            "AND A.DIA_CODCAJ=C.CAJ_BOLETA " +
            "AND B.SAB_CODPRO=D.PRE_CODIGO " +
            "AND D.PRE_CODIGO=E.PRE_CODPRO " +
            "AND A.DIA_CODVEN=H.VEN_CODIGO " +
            "AND D.PRE_CODLIN=P.LINEA " +
            "AND D.PRE_CODSUB=P.SUBLINEA " +
            "AND D.PRE_CODTAM=P.TAM " +
            "AND D.PRE_TIPENV=P.TIPENV " +
            "AND D.PRE_UNIDAD=P.UNIDAD " +
            "AND C.CAJ_FECLIQ BETWEEN '"+sdf.format(jdcDesde.getDate())+"' AND '"+sdf.format(jdcHasta.getDate())+"' " +
            "AND H.VEN_CODIGO='"+txtCodVen.getText()+"'" +
            "AND E.PRE_CODPRETIP=2 " +
            "AND A.DIA_ACCION='V' " +
            "AND C.CAJ_ACCION='V' " +
            "AND D.PRE_TIPENV<>'R'  " +      
            "GROUP BY A.DIA_BOLLIQ,A.DIA_CODVEN,H.VEN_NOMBRE,D.PRE_CODLIN,D.PRE_CODSUB,D.PRE_CODTAM,D.PRE_TIPENV,D.PRE_UNIDAD,P.COMIANT,P.COMINUE,C.CAJ_FECLIQ) AS Y LEFT OUTER JOIN VEBONIFICACION AS F " +
            "ON Y.BOLLIQ=F.BON_BOLLIQ " +
            "AND Y.LINEA=F.BON_CODLIN " +
            "AND Y.SUBLINEA=F.BON_CODSUB " +
            "AND Y.TAM=F.BON_CODTAM AND Y.TIPENV=F.BON_TIPENV " +
            "AND Y.UNID=F.BON_UNIDAD " +
            "GROUP BY Y.FECHA,Y.CODVEN,Y.NOMBRE,Y.LINEA,Y.SUBLINEA,Y.TAM,Y.TIPENV,Y.UNID,Y.COMIANT,Y.COMINUE " +
            "ORDER BY Y.FECHA) AS W " +
            "GROUP BY W.FECHA";
            
            rs=ConexionBD.querySelect(queryInt);
            
            
               File fp=new File("////172.16.8.201//"+usr.toLowerCase()+"//reporteComisiones.pdf");
                fp.delete();

            //Creacion del documento con un tamaÃ±o y unos margenes predeterminados
//Document document = new Document(PageSize.A4.rotate(), 50, 50, 50, 50); //rorate es para pÃ¡gina horizontal
                Document document = new Document();
            document.setPageSize(PageSize.LETTER);
           //A DocWriter class for PDF con Java.

           PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("\\\\172.16.8.201\\"+usr.toLowerCase()+"\\reporteComisiones.pdf"));

//Opens the document.
//You have to open the document before you can begin to add content to the body of the document.
document.open();
 String sucNevados = "La Cascada S.A.";

Paragraph par = new Paragraph();
// AÃ±adir parrafo en Negrita



    Font bfBold12 = new Font(FontFactory.getFont("arial", 9, Font.BOLD, BaseColor.BLACK));
     Font bf12 = new Font(FontFactory.getFont("arial", 8, Font.NORMAL, BaseColor.BLACK)); 
    float[] columnWidths = {2.5f, 2.5f, 2.5f, 2.5f};
    int vBorde=0, vBordeCab=15;//0=sin borde;15=todos los bordes
   
   //create PDF table with the given widths
   PdfPTable table = new PdfPTable(columnWidths);
   // set table width a percentage of the page width
   table.setWidthPercentage(105f);
// AÃ±adir parrafo en Negrita

  //cabecera reporte
    SimpleDateFormat fd = new SimpleDateFormat("dd/MM/yyyy");
   Date fechaSel = new Date();                      
  
int randIzq=0,randDer=0;
  Random rand = new Random();
  Random randD = new Random();
randIzq=rand.nextInt(10 - 1 + 1) + 1;
randDer=rand.nextInt(99 - 11 + 1) + 11;

par=new Paragraph(randIzq+txtCodVenEmizor.getText()+randDer,FontFactory.getFont("arial",10,Font.BOLD,BaseColor.BLACK));
par.setAlignment(Element.ALIGN_LEFT);
document.add(par);


par = new Paragraph(0,txtCodSupervisor.getText(),FontFactory.getFont("arial",7,Font.BOLD,BaseColor.BLACK));
par.setAlignment(Element.ALIGN_RIGHT);
document.add(par);
document.add(Chunk.NEWLINE);

par=new Paragraph("",FontFactory.getFont("arial",16,Font.UNDERLINE,BaseColor.BLACK));
par.setAlignment(Element.ALIGN_CENTER);
document.add(par);

/*par=new Paragraph("Desde: "+fd.format(jdcDesde.getDate())+" Hasta: "+fd.format(jdcHasta.getDate()),FontFactory.getFont("arial",16,Font.UNDERLINE,BaseColor.BLACK));
par.setAlignment(Element.ALIGN_CENTER);
document.add(par);
document.add(Chunk.NEWLINE);*/



  /* SimpleDateFormat formateador = new SimpleDateFormat("EEEE ',' dd 'de' MMMM 'de' yyyy", new Locale("ES"));
   Date fechaDate = new Date();
   String fechaLiteral = formateador.format(fechaDate);

par = new Paragraph(fechaLiteral,FontFactory.getFont("arial",10,Font.NORMAL,BaseColor.BLACK));
par.setAlignment(Element.ALIGN_RIGHT);
document.add(par);
document.add(Chunk.NEWLINE);*/


par = new Paragraph("");
par.setIndentationLeft(10);
document.add(par);
document.add(Chunk.NEWLINE);



    
//for(int p=0;p<3;p++){
insertCell(table, "FECHA", Element.ALIGN_LEFT, 1, bfBold12,vBordeCab);
insertCell(table, "A", Element.ALIGN_LEFT, 1, bfBold12,vBordeCab);
insertCell(table, "B", Element.ALIGN_LEFT, 1, bfBold12,vBordeCab);
insertCell(table, "DIF", Element.ALIGN_LEFT, 1, bfBold12,vBordeCab);

//insertCell(table, "CTA.SUP", Element.ALIGN_RIGHT, 1, bfBold12,vBordeCab);
table.setHeaderRows(0);
//}
//insert an empty row
   insertCell(table, "", Element.ALIGN_LEFT, 9, bfBold12,vBorde);
   //fin cabecera
   
   
            
              try {
                  while(rs.next()){
                     double impFis16=0,dif16=0,impFis13=0,dif13=0,comFis=0; 
                      //difInterna=Double.parseDouble(rs.getString("DIF"));
                            //realiza la consulta a FIS
                         
                      
                   /*   String queryFIS="SELECT Y.CODVEN AS CODVEN,Y.NOMBRE AS NOMBRE,Y.LINEA AS LINEA,Y.SUBLINEA AS SUBLINEA,Y.TAM AS TAM,Y.TIPENV AS TIPENV,Y.UNID AS UNID,Y.COMIANT AS COMIANT,Y.COMINUE AS COMINUE,Y.PAQ-COALESCE((F.PAQBONFIS/F.UNID),0) AS PAQNETO,((Y.PAQ-COALESCE((F.PAQBONFIS/F.UNID),0))*Y.COMIANT) AS COMIANTBS,((Y.PAQ-COALESCE((F.PAQBONFIS/F.UNID),0))*Y.COMINUE) AS COMINUEBSFIS " +
"FROM (SELECT A.DIA_BOLLIQ AS BOLLIQ,A.DIA_CODVEN AS CODVEN,H.VEN_NOMBRE AS NOMBRE,D.PRE_CODLIN AS LINEA,D.PRE_CODSUB AS SUBLINEA,D.PRE_CODTAM AS TAM,D.PRE_TIPENV AS TIPENV,D.PRE_UNIDAD AS UNID,P.COMIANT AS COMIANT,P.COMINUE AS COMINUE, SUM(B.SAB_VENCAJ/D.PRE_UNIDAD) AS PAQ " +
"FROM VECABBOLETA A,VEDETBOLETA B,VECAJA C,PRPRODUCTO D,PRPRECIOS E,VEVENDEDOR H,COMIPRODAGRUPADO P " +
"WHERE A.DIA_BOLETA=B.SAB_BOLETA " +
"AND A.DIA_CODCAJ=C.CAJ_BOLETA " +
"AND B.SAB_CODPRO=D.PRE_CODIGO " +
"AND D.PRE_CODIGO=E.PRE_CODPRO " +
"AND A.DIA_CODVEN=H.VEN_CODIGO " +
"AND D.PRE_CODLIN=P.LINEA " +
"AND D.PRE_CODSUB=P.SUBLINEA " +
"AND D.PRE_CODTAM=P.TAM " +
"AND D.PRE_TIPENV=P.TIPENV " +
"AND D.PRE_UNIDAD=P.UNIDAD " +
"AND C.CAJ_FECLIQ BETWEEN '"+sdf.format(jdcDesde.getDate())+"' AND '"+sdf.format(jdcHasta.getDate())+"' " +
"AND D.PRE_CODLIN='"+rs.getString("LINEA")+"' " +
"AND D.PRE_CODSUB='"+rs.getString("SUBLINEA")+"' " +
"AND D.PRE_CODTAM='"+rs.getString("TAM")+"' " +
"AND D.PRE_TIPENV='"+rs.getString("TIPENV")+"' " +
"AND D.PRE_UNIDAD='"+rs.getString("UNID")+"' " +
"AND A.DIA_CODVEN='"+rs.getString("CODVEN")+"' " +
"AND E.PRE_CODPRETIP=2 " +
"AND A.DIA_ACCION='V' " +
"AND C.CAJ_ACCION='V' " +
"GROUP BY A.DIA_BOLLIQ,A.DIA_CODVEN,H.VEN_NOMBRE,D.PRE_CODLIN,D.PRE_CODSUB,D.PRE_CODTAM,D.PRE_TIPENV,D.PRE_UNIDAD,D.PRE_ICE,P.COMIANT,P.COMINUE) AS Y LEFT OUTER JOIN (SELECT W.BON_BOLLIQ AS BOLLIQ, Q.PRE_CODLIN AS LINEA,Q.PRE_CODSUB AS SUBLINEA,Q.PRE_CODTAM AS TAM,Q.PRE_TIPENV AS TIPENV,Q.PRE_UNIDAD AS UNID, SUM(W.BON_CAJAS) AS PAQBONFIS " +
"FROM VEBONIFICACION W,PRPRODUCTO Q " +
"WHERE W.BON_CODPRO=Q.PRE_CODIGO " +
"GROUP BY W.BON_BOLLIQ,Q.PRE_CODLIN,Q.PRE_CODSUB,Q.PRE_CODTAM,Q.PRE_TIPENV,Q.PRE_UNIDAD) AS F " +
"ON Y.BOLLIQ=F.BOLLIQ " +
"AND Y.LINEA=F.LINEA " +
"AND Y.SUBLINEA=F.SUBLINEA " +
"AND Y.TAM=F.TAM " +
"AND Y.TIPENV=F.TIPENV " +
"AND Y.UNID=F.UNID";*/
                      
                      
                      
   
   

                      
                      
                      
                  
                      
                           //  rs2=ConexionBD.querySelect2(queryFIS);
                           //  if(rs2.next()){
                                 
                                 sumComiAnt=sumComiAnt+Double.parseDouble(rs.getString("COMIANTBS"));
                                 sumComiNue=sumComiNue+Double.parseDouble(rs.getString("COMINUEBS"));
                                 sumDifComi=Double.parseDouble(rs.getString("COMINUEBS"))-Double.parseDouble(rs.getString("COMIANTBS"));
                                 
                          insertCell(table, A.convierte_AMD_a_DMA_barra(rs.getString("FECHA")), Element.ALIGN_LEFT, 1, bfBold12,vBorde);
                          insertCell(table, A.convADosDecimales(rs.getString("COMIANTBS")), Element.ALIGN_LEFT, 1, bfBold12,vBorde);
                          insertCell(table, A.convADosDecimales(rs.getString("COMINUEBS")), Element.ALIGN_LEFT, 1, bfBold12,vBorde);
                          insertCell(table, A.convADosDecimales(Double.toString(sumDifComi)), Element.ALIGN_LEFT, 1, bfBold12,vBorde);
                                 sumDifComiTot=sumDifComiTot+(sumDifComi);
                                 table.setHeaderRows(0);

   insertCell(table, "", Element.ALIGN_LEFT, 4, bfBold12,vBorde);
                                 
                                 /*comFis=Double.parseDouble(rs2.getString("COMINUEBSFIS"));
                                 impFis16=(comFis*0.16);
                                 dif16=difInterna-impFis16;
                                 impFis13=(comFis*0.13);
                                 dif13=difInterna-impFis13;*/
                                 //imprimir.write(rs.getString("CODVEN")+";"+rs.getString("NOMBRE")+";"+rs.getString("LINEA")+";"+rs.getString("SUBLINEA")+";"+rs.getString("TAM")+";"+rs.getString("TIPENV")+";"+rs.getString("UNID")+";"+rs.getString("COMIANTBS")+";"+rs.getString("COMINUEBS")+";"+difInterna+";"+comFis+";"+impFis16+";"+dif16+";"+impFis13+";"+dif13);
                                 //imprimir.newLine();
                                 //dlm.addElement(rs.getString("CODVEN")+";"+rs.getString("NOMBRE")+";"+rs.getString("SUBLINEA")+";"+rs.getString("COMANTBS")+";"+rs.getString("COMNUEBS")+";"+rs.getString("DIF")+";"+rs2.getString("COMANTBSFIS")+";"+rs2.getString("COMNUEBSFIS")+";"+rs2.getString("DIFFIS"));
                            // }else{
                            //     dif16=0;
                            //     dif13=0;
                                 //imprimir.write(rs.getString("CODVEN")+";"+rs.getString("NOMBRE")+";"+rs.getString("LINEA")+";"+rs.getString("SUBLINEA")+";"+rs.getString("TAM")+";"+rs.getString("TIPENV")+";"+rs.getString("UNID")+";"+rs.getString("COMIANTBS")+";"+rs.getString("COMINUEBS")+";"+difInterna+";0;0;0;0;0");
                                 //imprimir.newLine();
                                  //dlm.addElement(rs.getString("CODVEN")+";"+rs.getString("NOMBRE")+";"+rs.getString("SUBLINEA")+";"+rs.getString("COMANTBS")+";"+rs.getString("COMNUEBS")+";"+rs.getString("DIF")+";0;0;0");
                            // }
                           //  rs2.close();
                      
                  } 
                  rs.close();
                  ConexionBD.cierraConexion2();
              } catch (SQLException ex) {
                  A.mensaje("OcurriÃ³ un problema a al intentar obtener registros de INT, ERROR: "+ex.getMessage());
              }

              insertCell(table,"TOTALES:", Element.ALIGN_LEFT, 1, bfBold12,vBordeCab);           
              insertCell(table, A.convADosDecimales(Double.toString(sumComiAnt)), Element.ALIGN_LEFT, 1, bfBold12,vBordeCab);
                          insertCell(table, A.convADosDecimales(Double.toString(sumComiNue)), Element.ALIGN_LEFT, 1, bfBold12,vBordeCab);
                          insertCell(table, A.convADosDecimales(Double.toString(sumDifComiTot)), Element.ALIGN_LEFT, 1, bfBold12,vBordeCab);

                                 table.setHeaderRows(0);

   insertCell(table, "", Element.ALIGN_LEFT, 4, bfBold12,vBorde);
            ConexionBD.cierraConexion();

    // add the paragraph to the document
   document.add(table);          
document.close();
           Desktop.getDesktop().open(new File("////172.16.8.201//"+usr.toLowerCase()+"//reporteComisiones.pdf"));
                //imprimir.close();  
                } catch (IOException e) {
                System.err.println(e);
                System.exit(1);
                } catch (DocumentException ex) {
                  Logger.getLogger(frmComiVendeImpuestos.class.getName()).log(Level.SEVERE, null, ex);
              }
         // A.mensaje("Fue creado el archivo plano");
          System.exit(1);
          
        }//fin if confirma
    }//GEN-LAST:event_btnRepPorVendedorActionPerformed

     private void insertCell(PdfPTable table, String text, int align, int colspan, Font font,int borde){
  
  //create a new cell with the specified Text and Font
  PdfPCell cell = new PdfPCell(new Phrase(text.trim(), font));
  //set the cell alignment
  cell.setHorizontalAlignment(align);
  //set the cell column span in case you want to merge two or more cells
  cell.setColspan(colspan);
  //in case there is no text and you wan to create an empty row
 
  cell.setBorder(borde); //0=sin borde; 15=todos los bordes;1=raya arriba;2=raya abajo;4=rayas costados
 
        //in case there is no text and you wan to create an empty row
  if(text.trim().equalsIgnoreCase("")){
   cell.setMinimumHeight(10f);
  }
  //add the call to the table
  table.addCell(cell);
  
  
 }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmComiVendeImpuestos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmComiVendeImpuestos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmComiVendeImpuestos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmComiVendeImpuestos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmComiVendeImpuestos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRepPorVendedor;
    private javax.swing.JButton btnReporte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private com.toedter.calendar.JDateChooser jdcDesde;
    private com.toedter.calendar.JDateChooser jdcHasta;
    private javax.swing.JTextField txtCodSupervisor;
    private javax.swing.JTextField txtCodVen;
    private javax.swing.JTextField txtCodVenEmizor;
    private javax.swing.JTextField txtNomVendedor;
    // End of variables declaration//GEN-END:variables
}
